1. (Could be a similar error as below with different values also)
NoSuchMethodError: org.apache.xmlbeans.XmlOptions.setLoadEntityBytesLimit(I)Lorg/apache/xmlbeans/XmlOptions
org.apache.poi.ooxml.POIXMLException

Solution 1 - Search on net and download latest XML Beans JAR (or the JAR that is mentioned in the detailed error message)
Solution 2 - If multiple XML Beans JARs are added in Build Path, remove one. Conflicting JARs can cause the problem

2. While trying to run TestNG suite:
Exception in thread "main" java.lang.NoClassDefFoundError: org/testng/TestNGException

Solution - even though the TestNG suite is downloaded, downoad the TestNG latest JAR and add to build path and run again

3. While trying to run TestNG suite:
[RemoteTestNG] detected TestNG version 6.14.3 -> if after this line you get error "cannot find class in classpath":
Solution - right click on project -> Build Path -> Add Libraries -> Select TestNG
If required move the source code file under newly created TestNG->Src folder and update package name and re run

4. While invoking TestNG XML:
Cannot find class in classpath
Solution 1 - make sure the class tag has the value packagename.classname
Solution 2 - Project > Clean -> Clean All projects; run the project again using testng.xml file

5. While running a build of Jenkins:
Getting error Could not find or load main class org.testng.TestNG
Solution 1 - Ensure the testNG JARs are all in the same lib folder along with all other JARs
Solution 2 - Ensure the Binary files of Jenkins are on the machine, and the path of these binaries is provided in Jenkins configuration

6. A JNI error has occurred, please check your installation and try again
Solution: Add all required JARs in the buikd path and run again

7. java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver.
java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property
Solution 1 - Ensure the latest driver file is downloaded and used
Solution 2 - Ensure you are using System.setProperty and not System.getProperty
Solution 3 - Ensure no spelling errors in System.setProperty or it's parameters

8. While downloading Maven project from GIT, if the pom.xml has a red cross mark but no error is seen:
right click on project -> Build Path -> Configure Build Path -> Maven Depnedencies -> download the jar(s) which are marked with a red cross,
and store them in the location mentioned next to the jar(s). 
Refresh the project and invoke TESTNG.XML file again.

9. java.lang.NoClassDefFoundError: com/google/common/collect/ImmutableMap
Delete the guava.jar (most likely caused by mulitple versions of guava jars) and add just 1 guava jar. Clean project and run

10. jxl.read.biff.BiffException: Unable to recognize OLE stream
Solution - If JXL library is being used, ensure the excel sheet is xls format and not xlsx. JXL cannot read xlsx or csv format.
To work with xlsx files, use the POI library

11. org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 75
Solution - Ensure the chrome driver file and the chrome version are both supported by each other. If not sure, download latest version
of both and run

12. An internal error occurred during: "Launching gtwDB".
org.testng.eclipse.maven.MavenTestNGLaunchConfigurationProvider.getClasspath(Lorg/eclipse/debug/core/ILaunchConfiguration;)Ljava/util/List;
Solution - While installing TestNG, please uncheck the chck box for M2E Maven related one and continue the installation process. Restart the Eclipse and execute a test case
If already installed, go to Help -> Eclipse Marketplace -> Installed -> Select TestNG and uncheck the "TestNG M2E (Maven) Integration and click 
Next, finish. Restart eclipse and run

13. java.lang.ClassNotFoundException: com.mysql.jdbc.Driver
Find and add mysql-connector-java-5.1.25-bin.jar into Eclipse from buildpath -> add external jars

14. While implementing email sending functionality:
java.lang.NoClassDefFoundError: com/sun/mail/util/MailLogger
Add the Maven dependency as below (or download the jar and add it into the build path):
<dependency>
    <groupId>com.sun.mail</groupId>
    <artifactId>javax.mail</artifactId>
    <version>1.6.0</version>
</dependency>

15. Could not find or load main class <packageName>.<className>
Many solutions on the net, the one that worked for me - CLose eclipse, go to the workspace folder and delete .metadata folder, 
open eclipse. If no projects are showing up, close eclipse again, restore the .metadata folder from recycle bin and open eclipse again. 
This resovled the issue for me.

16. If WebDriver and/or Chrome Driver has a red underline and hovering the mouse shows "Cannot be resolved to a type"
Solution - Add required Jars into the build path. Alternatively, click on the Eclipse recommended solutions and chose 'fix project setup'
and select one of the options which add the missing jar into build path.
If it is a Maven project, add the dependency for the missing JAR, most likely selenium standalone server jar or something similar
If the issue persists, force close all chromedriver.exe and chrome.exe processes (type in cmd prompt 'taskkill /F /IM chromedriver.exe'),
then restart eclipse

17. org.openqa.selenium.SessionNotCreatedException: session not created
Verify Chrome version, and download the chrome driver which supports this version. As an example, Chrome v76 will give this error if the
driver version is 77 or beyond

18. org.openqa.selenium.WebDriverException: invalid argument
Solution 1 - Ensure the chromedriver.exe argument name is exactly the same (spelling and casing) as the actual file name
Solution 2 - Ensure the URL provided is prefixed with https://

19. java.lang.NoClassDefFoundError: com/google/common/collect/ImmutableSet
OR
java.lang.NoSuchMethodError: com.google.common.util.concurrent.SimpleTimeLimiter.create(Ljava/util/concurrent/ExecutorService;)Lcom/google/common/util/concurrent/SimpleTimeLimiter;
Download and add to build path (or add as dependency if Maven project) the latest version of guava.jar which is now an external
dependency and needs to be defined explicitly

20. java.lang.NoClassDefFoundError: okhttp3/ConnectionPool
Download and add to build path (or add as dependency if Maven project) the latest version of okhttp-3.10.0.jar and okio-1.14.1.jar

21. java.lang.NoClassDefFoundError: org/apache/commons/exec/Executor
.
.
Caused by: java.lang.ClassNotFoundException: org.apache.commons.exec.Executor
Download and add to build path (or add as dependency if Maven project) the latest version of commons-exec-<version>.jar

22. java.lang.NoClassDefFoundError: org/json/JSONObject
Download and add to build path (or add as dependency if Maven project) the latest version of json-<version>.jar

23. org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
This happens when navigating through table contents and trying to break out in between. Selenium still tries to locate the remaining
table data even though we exited, hence this error. A quick fix for this is to perform the action on desired element after all iterations
are completed. Eg., in below code, we are searching through entire table for a row containing the word "Aviation" and clicking on the
edit link/button of that particular row:
// Get all the table row elements from the table
 List<WebElement> allRows = driver.findElements(By.xpath("//table[@id='tiAnalysisTable']//tr"));
 int rowNum=0;
 // Iterate over them and get all the cells
 for (WebElement row : allRows) {
     List<WebElement> cells = row.findElements(By.tagName("td"));
     // Iterate thru the contents of each cell
     for (WebElement cell : cells) {        
     //System.out.println(cell.getText());
     if(cell.getText().contains("Aviation")) {
     driver.findElement(By.xpath("(//i[@class='fa fa-link'])["+rowNum+"]")).click();
         break;
     }
 }
     rowNum++;
 }

Overcome this error by performing the click after / outside the for loop:
		  List<WebElement> allRows = driver.findElements(By.xpath("//table[@id='tiAnalysisTable']//tr")); 
		  int rowNum=0;
		  WebElement editIcon = null;
		  for (WebElement row : allRows) { 
		      List<WebElement> cells = row.findElements(By.tagName("td")); 
		      for (WebElement cell : cells) { 
		      if(cell.getText().contains("Aviation")) {
                  editIcon = driver.findElement(By.xpath("(//i[@class='fa fa-link'])[" +rowNum+ "]"));
		    	  break;
		      }
		  }
		      rowNum++;
		  }
		  editIcon.click();

24. If element is visibile through the Inspect Page but same element locator is not working / able to locate element through the
script, even though it is visible on the screen
Solution - This happens when the web page has multiple frames. Ensure to switch to appropriate frame and then perform the operation.
driver.switchTo().frame(<frameIndex OR frameName>);

25. Red underline below the .until method with this error (or similar):
Method until(Function) in the type FluentWait is not applicable for the arguments
Solution 1 - Ensure multiple guava.jar files are not present in build path and/or maven's pom.xml
Solution 2 - Try removing all references to the guava.jar from build path and/or maven's pom.xml

26. Exception in thread "main" java.lang.NoClassDefFoundError: com/beust/jcommander/ParameterException
Download the jcommander jar and add to build path (or) add to Maven dependency

27. Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/poi/ss/formula/udf/UDFFinder
Ensure the poi and poiooxml jars are same version eg. 3.9. Different versions of these cause conflcts leadng to this error

